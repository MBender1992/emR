save_surv_plot_eumelareg <- function(data,time, status, var,legend.labs=NULL, regID = "REGISTR", registry = "EUMELAREG",path = NULL,...){
LOT <- stringr::str_extract(time, "\\d")
tmp <- stringr::str_extract(status, stringr::fixed(c("PFS","OS"), ignore_case=TRUE))
survival <- tmp[-which(is.na(tmp))]
if (is.null(path)) {
if (!dir.exists(paste("Results/survival_curve/",registry, sep = ""))) {
dir.create(paste("Results/survival_curve/",registry, sep = ""), recursive = TRUE)
}
path <- paste("Results/survival_curve/",registry, sep = "")
}
if (ifelse(is.na(stringr::str_extract(var,"\\d$") != LOT),TRUE, stringr::str_extract(var,"\\d$") != LOT)){
warning("Please check if grouping variable corresponds to the correct line of treatment")
}
if (registry != "EUMELAREG"){
data <-  data[eval(parse(text=regID)) == registry]
data[[var]] <- droplevels(data[[var]])
}
filename <- paste("/survival_curve_",var,"_",registry,"_",survival,LOT,".png", sep = "")
png(paste(path, filename, sep = ""), units="in", width=12, height=6.2, res=600)
if (!is.null(legend.labs)){
t <- try(parse(text = legend.labs), silent = TRUE)
if("try-error" %in% class(t)){
labs <- legend.labs
} else {
labs <- eval(parse(text = legend.labs))
}
if(survival == "PFS"){
p <- survplot_eumelareg(data = data, time = time, status = status,
legend.labs = labs,
var = var,ylab = "Probability of Progression Free Survival",...)
} else if(survival == "OS"){
p <- survplot_eumelareg(data = data, time = time, status = status,
legend.labs = labs,
var = var,  ylab = "Probability of Overall Survival",...)
} else {
stop("Please specify type of survival")
}
} else {
if(survival == "PFS"){
p <- survplot_eumelareg(data = data, time = time, status = status,
var = var,ylab = "Probability of Progression Free Survival",...)
} else if(survival == "OS"){
p <- survplot_eumelareg(data = data, time = time, status = status,
var = var,  ylab = "Probability of Overall Survival",...)
} else {
stop("Please specify type of survival")
}
}
print(p)
dev.off()
}
