# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
# package name
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
install(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
# package name
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
# install package
install(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
# package name
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
install(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
# packsetwd("..")
check(package)
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# install package
install(package)
setwd("..")
# install package
install(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
# install package
install(package)
29.75*2350
x <- c(221, 251, 346, 376, 401, 421, 411, 481)
y <- c(9.7, 7.9, 8.6, 7.2, 7.3, 7.1, 7.0, 6.8)
mean(x)
y_quer <- mean(y)
x_quer <- mean(x)
x_quer
y_quer
x <- c(221, 251, 346, 376, 401, 421, 471, 481)
mean(x)
x_quer <- mean(x)
x_quer
x_querÂ²
x_quer^2
y_quer^2
mean(x^2)
mean(y^2)
mean(x*y)
x*y
sum(x*y)
mean(x*y)
x <- c(221, 251, 346, 376, 401, 421, 471, 481)
y <- c(9.7, 7.9, 8.6, 7.2, 7.3, 7.1, 7.0, 6.8)
x_quer <- mean(x)
y_quer <- mean(y)
x_quer2 <- x_quer^2
x_quer2 <- y_quer^2
x2_quer <- mean(x^2)
y2_quermean(y^2)
y2_quer  <- mean(y^2)
(mean(x*y) - (x_quer*y_quer))/(sqrt(x2_quer - x_quer2)* sqrt(y2_quer - y_quer2))
y2_quer  <- mean(y^2)
x <- c(221, 251, 346, 376, 401, 421, 471, 481)
y <- c(9.7, 7.9, 8.6, 7.2, 7.3, 7.1, 7.0, 6.8)
x_quer <- mean(x)
y_quer <- mean(y)
x_quer2 <- x_quer^2
y_quer2 <- y_quer^2
x2_quer <- mean(x^2)
y2_quer  <- mean(y^2)
(mean(x*y) - (x_quer*y_quer))/(sqrt(x2_quer - x_quer2)* sqrt(y2_quer - y_quer2))
cor(x,y)
cor(x,y)
length(x)
median(x)
mean(376,401)
mean(c(376,401))
95200+91000+ 86800 + 82600+ 78400 + 74200
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen2")
install.packages("roxygen2")
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
# install package
install(package)
install.packages(c("backports", "BBmisc", "BH", "BiocManager", "blob", "brew", "Cairo", "caret", "checkmate", "circlize", "clipr", "clue", "colorspace", "commonmark", "conquer", "credentials", "cvAUC", "data.table", "DBI", "DEoptimR", "DescTools", "devtools", "digest", "doParallel", "dplyr", "DT", "dtplyr", "Exact", "fansi", "foreach", "fs", "future", "future.apply", "geepack", "gert", "gld", "glmnet", "globals", "Gmisc", "gower", "gplots", "haven", "Hmisc", "hms", "httr", "igraph", "iterators", "lmtest", "lubridate", "magrittr", "matrixStats", "memoise", "missForest", "nloptr", "openssl", "openxlsx", "parallelly", "pbapply", "pkgbuild", "plyr", "pracma", "processx", "progressr", "ps", "randomForest", "rcmdcheck", "Rcpp", "RcppArmadillo", "readr", "readxl", "recipes", "remotes", "rio", "rjson", "robustbase", "rootSolve", "rvest", "sessioninfo", "shinydashboard", "shinyWidgets", "stringi", "survival", "testthat", "tibble", "tidyr", "tzdb", "usethis", "uuid", "vctrs", "vroom", "xfun", "xgboost", "XML", "xml2", "yaml", "zoo"))
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
installr::updateR()
install.packages("installr")
installr::updateR()
2+2
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("tidyverse")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("ggpubr")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("survminer")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("plotROC")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("mice")
install.packages("pROC")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("GMisc")
install.packages("Gisc")
install.packages("Gmisc")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("table1")
install.packages("networkD3")
install.packages("ggh4x")
install.packages("textshape")
install.packages("insight")
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
install.packages("Rtools")
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
# install package
install(package)
install.packages("data.table")
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# check package
setwd("..")
check(package)
# install package
install(package)
library(emR)
logrank_IPSW_RISCA
?logrank_IPSW_RISCA
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
?`:::`
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
install(package)
# check package
setwd("..")
# install package
install(package)
# install package
install(package)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("processx")
install.packages("devtools")
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
# install package
install(package)
# check package
setwd("..")
# install package
install(package)
library(emR)
?strat_cox_table
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
#' Calculate bivariate residuals in a latent class analysis
#'
#' This code is adapted from
#' Author: Daniel Oberski
#' Date: 2017-08-01
#' Bivariate residual statistic for latent class analysis
#' Calculate the BVR for poLCA objects
#' @param fit fit object of class "poLCA" generated with the poLCA function.
#' @export
??combn
library(devtools)
library(roxygen2)
setwd("C:/MBender/Arbeit/Github")
# setwd("Z:/Aktuell/Eigene Dateien/Eigene Dateien_Marc/R/Github")
package <- "emR"
# create package
# create(package)
# update package
setwd(paste("./", package, sep = ""))
document()
setwd("..")
check(package)
install(package)
warnings()
